#! /bin/bash

# The command to run with the changed root directory. Here is the default command applied when the
# '${CHTOOR_DIR}/chtoor.conf' configuration file does not exist or RUN has not been defined in it.
# The command line parameter supersedes this setting.
RUN="/bin/bash -l"

# Shell variables that should be exported into changed root environment.  The following list is the
# same as the default one applied when the '${CHTOOR_DIR}/chtoor.conf' configuration file does not
# exist or EXPORT has not been defined in it.
EXPORT=(DISPLAY)


# dupmount
# dupmount-ro
# rdupmount
# rdupmount-ro
# bind
# bind-ro
# rbind
# rbind-ro
# 
# own-create
# own-copy
# own-copy-missing
# own-copy-update
# own-sync
# own-sync-missing
# own-sync-update
# own
# 
# If the entry has no any action it is skipped silently.
#
# CHTOOR_DIR is the directory where a new root directory named 'new_root' will be created,
# it must be specified on the command line.
#
# All the directory entries for being set up by 'own' actions are first created in
# '${CHTOOR_DIR}/own' directory with the same mode/ownership/timestamps as they have in the current
# root hierarchy, and then bind-mounted into '${CHTOOR_DIR}/new_root' hierarchy accordingly.
#
# All the file entries for being set up by 'own' actions are created under their paths in
# '${CHTOOR_DIR}/own' directory with the same mode/ownership/timestamps as they have in the current
# root hierarchy, and then if the file with the same relative path under '${CHTOOR_DIR}/new_root'
# directory appears to be a different one, it is bind-mounted to that file.
#
# Setup entries are processed in the alphabetical order regardless of their appearance in the SETUP
# list.
# USER is the name of the current effective user ID.
 
# An example of the new root directory setup which is the same as minimal defaults used when the
# '${CHTOOR_DIR}/chtoor.conf' configuration file does not exist or SETUP has not been defined in it.
# SETUP=(
#     [/]=rbind-ro
#     [/home/"$USER"]=own-create
#     [/home/"$USER"/.bash_profile]=own-copy-missing
#     [/home/"$USER"/.bashrc]=own-copy-missing
#     [/home/"$USER"/.inputrc]=own-copy-missing
# )

# Here is a more fine tuned setup for '${CHTOOR_DIR}/new_root' directory which prevents leaking
# some runtime data to the programs being run with the changed root directory from the current
# environment through /run and /tmp bind-mounted directories. It also excludes some
# directories that are typically unneeded in the changed root environment (they are marked with
# '#excluded' comment for convenience).  It is assumed here that /run and /tmp directories are
# mounted as tmpfs file system under the current root directory and we duplicate their mount options
# to create a new storage for mounting it under 'new_root/run' and 'new_root/tmp'.
SETUP=(
    [/bin]=rbind-ro
    [/boot]=#excluded

    [/dev]=bind-ro
    [/dev/shm]=#excluded
    [/dev/pts]=rbind-ro
    [/dev/mqueue]=rbind-ro
    [/dev/hugepages]=#excluded

    [/etc]=rbind-ro
    [/home]=own-create
    [/home/"$USER"]=own-create
    [/home/"$USER"/.bash_profile]=own-copy-missing
    [/home/"$USER"/.bashrc]=own-copy-missing
    [/home/"$USER"/.inputrc]=own-copy-missing
    [/lib]=rbind-ro
    [/lib64]=rbind-ro
    [/lost+found]=#excluded
    [/media]=rbind-ro
    [/mnt]=rbind-ro
    [/opt]=rbind-ro
    [/proc]=rbind-ro
    [/root]=rbind-ro
    [/run]=dupmnt
    [/sbin]=rbind-ro
    [/srv]=rbind-ro

    [/sys]=bind-ro
    [/sys/kernel/security]=rbind-ro
    [/sys/fs/selinux]=rbind-ro
    [/sys/fs/pstore]=rbind-ro
    [/sys/fs/fuse/connections]=rbind-ro
    [/sys/kernel/config]=#excluded
    [/sys/kernel/debug]=#excluded
    [/sys/fs/cgroup]=#excluded

    [/tmp]=dupmnt
    [/usr]=rbind-ro
    [/var]=rbind-ro
)

